name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.prod
          push: true
          tags: ${{secrets.DOCKER_USER}}/${{ secrets.DOCKER_REPO }}:api-latest
          build-args: |
            NODE_ENV=${{ secrets.NODE_ENV }}
            APP_NAME=${{ secrets.APP_NAME }}
            APP_PORT=${{ secrets.APP_PORT }}
            API_PREFIX=${{ secrets.API_PREFIX }}
            FRONTEND_DOMAIN=${{ secrets.FRONTEND_DOMAIN }}
            BACKEND_DOMAIN=${{ secrets.BACKEND_DOMAIN }}
            DATABASE_TYPE=${{ secrets.DATABASE_TYPE }}
            DATABASE_HOST=${{ secrets.DATABASE_HOST }}
            DATABASE_PORT=${{ secrets.DATABASE_PORT }}
            DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            DATABASE_NAME=${{ secrets.DATABASE_NAME }}
            DATABASE_SYNCHRONIZE=${{ secrets.DATABASE_SYNCHRONIZE }}
            DATABASE_MAX_CONNECTIONS=${{ secrets.DATABASE_MAX_CONNECTIONS }}
            DATABASE_SSL_ENABLED=${{ secrets.DATABASE_SSL_ENABLED }}
            DATABASE_REJECT_UNAUTHORIZED=${{ secrets.DATABASE_REJECT_UNAUTHORIZED }}
            DATABASE_CA=${{ secrets.DATABASE_CA }}
      - name: SSH into server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          script: |
            cd /${{ secrets.SERVER_USERNAME }}/stacy-mills-api
            docker stop $(docker ps -a -q)
            docker login -u ${{secrets.DOCKER_USER}} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{secrets.DOCKER_USER}}/${{secrets.DOCKER_REPO}}:api-latest
            docker run -dit -p 8080:8080 ${{secrets.DOCKER_USER}}/${{secrets.DOCKER_REPO}}:api-latest